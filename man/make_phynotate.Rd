% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_phynotate.R
\name{make_phynotate}
\alias{make_phynotate}
\title{Make a Shiny application to display, customize appearence, and annotate a phylogeny}
\usage{
make_phynotate(
  phylogeny = NULL,
  draw_modules = "LPTB",
  annotation_module = FALSE
)
}
\arguments{
\item{phylogeny}{an object of class \code{phylo} to display. Very large phylogenies
typically will be dificult to display legibly.}

\item{draw_modules}{character string specifying the customizing widgets (shiny modules) to
include. The default is \code{"LPBT"} which stands for Layout, Plot area,
Branches, and Tips. Changing the content and order can be achieved by
changing the string, e.g., \code{"LP"} will only allow customization
of the plot layout and size, whereas \code{"BTL"} will show widgets for
branches, tips, and layout in that order.}

\item{annotation_module}{logical. Whether to include the 'clade_annotation' module (\code{annotate_ui/server})

See \code{?modules} for details about the modules.}
}
\description{
\code{make_phynotate} generates a standalone \code{{shiny}} app with one phylogeny and
widgets for customizing its appearence. This is a wrapper around
\code{phynotate::main_ui/server} to simplify usage when a the main module is
called as a standalone app. See \code{?draw_server} and \code{?main_server} for an
for info on how to include the modules in an existing app.
}
\examples{

# working with `phylo` objects
if (interactive()) {
   library(ape)
   data(bird.orders)
   make_phynotate(phylogeny=bird.orders, modules = "LPBT")
}

# working with `tbl_tree` or `treedata` objects
if (interactive()) {
   library(ape)
   data(bird.orders)
   library(tidytree)
   library(dplyr)
   
   tidytree::as_tibble(bird.orders) \%>\%
     dplyr::mutate(trait = runif(n = nrow(.), min = 0, max = 5)) \%>\%
     phynotate::make_phynotate(phylogeny = .)
}

}
